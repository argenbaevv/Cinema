{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n/**\n * internal utility\n */\n// eslint-disable-next-line import/prefer-default-export\nexport var resolveSxValue = function resolveSxValue(_ref, key, defaultValue) {\n  var theme = _ref.theme,\n    ownerState = _ref.ownerState;\n  var parsedValue;\n  var sxObject = {};\n  function resolveSx(sxProp) {\n    if (typeof sxProp === 'function') {\n      var result = sxProp(theme);\n      resolveSx(result);\n    } else if (Array.isArray(sxProp)) {\n      sxProp.forEach(function (sxItem) {\n        if (typeof sxItem !== 'boolean') {\n          resolveSx(sxItem);\n        }\n      });\n    } else if (typeof sxProp === 'object') {\n      sxObject = _extends({}, sxObject, sxProp);\n    }\n  }\n  if (ownerState.sx) {\n    resolveSx(ownerState.sx);\n    var value = sxObject[key];\n    if (typeof value === 'string' || typeof value === 'number') {\n      if (key === 'borderRadius') {\n        var _theme$vars;\n        if (typeof value === 'number') {\n          return \"\".concat(value, \"px\");\n        }\n        parsedValue = ((_theme$vars = theme.vars) == null ? void 0 : _theme$vars.radius[value]) || value;\n      } else {\n        parsedValue = value;\n      }\n    }\n    if (typeof value === 'function') {\n      parsedValue = value(theme);\n    }\n  }\n  return parsedValue || defaultValue;\n};","map":null,"metadata":{},"sourceType":"module"}